<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlDialectInspection, SqlNoDataSourceInspection -->
<mapper namespace="com.oc.greenbean.mybatis.mapper.BookMapper">
  <cache type="org.mybatis.caches.ehcache.EhcacheCache">
    <property name="timeToIdleSeconds" value="3600"/>
    <property name="timeToLiveSeconds" value="3600"/>
    <property name="maxEntriesLocalHeap" value="1000"/>
    <property name="maxEntriesLocalDisk" value="10000000"/>
    <property name="memoryStoreEvictionPolicy" value="LRU"/>
  </cache>
  <select id="getSearchBooks" resultType="java.util.Map">
    <bind name="keywordLike" value="'%' + keyword + '%'"/>
    select distinct book_id as id from v_book_author where book_name like #{keywordLike} or author_name like #{keywordLike} or book_isbn = #{keyword}
  </select>

  <resultMap type="com.oc.greenbean.domain.Book" id="bookResultMap">
    <id property="id" column="id"/>
    <result property="name" column="name"/>
    <result property="isbn" column="isbn"/>
    <result property="picture" column="picture"/>
    <result property="publisher" column="publisher"/>
    <result property="publicationYear" column="publication_year"/>
    <result property="publicationMonth" column="publication_month"/>
    <result property="publicationDay" column="publication_day"/>
    <result property="price" column="price"/>
    <result property="subtitle" column="subtitle"/>
    <result property="originalName" column="original_name"/>
    <result property="binding" column="binding"/>
    <result property="page" column="page"/>
    <result property="contentIntro" column="content_intro"/>
    <result property="authorIntro" column="author_intro"/>
    <result property="directory" column="directory"/>

    <collection property="authors" javaType="java.util.List" ofType="com.oc.greenbean.domain.Author">
      <id property="id" column="author_id"/>
      <result property="name" column="author_name"/>
    </collection>
    <collection property="translators" javaType="java.util.List" ofType="com.oc.greenbean.domain.Translator">
      <id property="id" column="translator_id"/>
      <result property="name" column="translator_name"/>
    </collection>
  </resultMap>

  <select id="getBookBasicInfo" resultMap="bookResultMap">
    select * from v_book_author_translator where id = #{id}
  </select>

  <select id="getBookRatingInfo" resultType="java.util.Map">
    select count(*) as ratingCount, avg(score) as rating from t_book_user where book_id = #{id} and score is not null
  </select>
  <!-- XXX 是否可以把上下两个语句合成一个 -->
  <select id="getBookRatingCountGroupByScore" resultType="java.util.Map">
    select score, count(*) as ratingCount from t_book_user where book_id = #{id} and score is not null group by score
  </select>

  <!-- XXX 有没有更好的写法 -->
  <select id="getSearchBooksWithPagination" resultType="java.util.Map">
    <bind name="keywordLike" value="'%' + keyword + '%'"/>
    select distinct book_id as id from v_book_author where book_name like #{keywordLike} or author_name like #{keywordLike} or book_isbn = #{keyword} limit #{start}, #{size}
  </select>

  <select id="getSearchBooksCount" resultType="java.lang.Integer">
    <bind name="keywordLike" value="'%' + keyword + '%'"/>
    select count(distinct book_id) as count from v_book_author where book_name like #{keywordLike} or author_name like #{keywordLike} or book_isbn = #{keyword}
  </select>

  <insert id="insertBookBasicInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="int">select last_insert_id()</selectKey>
    insert into t_book (name, isbn, publisher, price, publication_year, publication_month, publication_day, subtitle, original_name, binding, page, content_intro, author_intro, directory) values(#{name}, #{isbn}, #{publisher}, #{price}, #{publicationYear}, #{publicationMonth}, #{publicationDay}, #{subtitle}, #{originalName}, #{binding}, #{page}, #{contentIntro}, #{authorIntro}, #{directory})
  </insert>

  <insert id="insertBookAuthor">
    insert into t_book_author (book_id, author_id) values
    <foreach item='item' collection='author' separator=','>
      (#{bookId}, #{item})
    </foreach>
  </insert>
  <insert id="insertBookTranslator">
    insert into t_book_translator (book_id, translator_id) values
    <foreach item='item' collection='translator' separator=','>
      (#{bookId}, #{item})
    </foreach>
  </insert>

  <select id="getAuthorSuggestion" resultType="java.lang.String">
    <bind name="keywordLike" value="'%' + keyword + '%'"/>
    select name from t_author where name like #{keywordLike}
  </select>

  <select id="getTranslatorSuggestion" resultType="java.lang.String">
    <bind name="keywordLike" value="'%' + keyword + '%'"/>
    select name from t_translator where name like #{keywordLike}
  </select>

  <select id="getAuthorIdByName" resultType="java.lang.Integer">
    select id from t_author where name = #{authorName}
  </select>

  <select id="getTranslatorIdByName" resultType="java.lang.Integer">
    select id from t_translator where name = #{translatorName}
  </select>

  <insert id="insertAuthor">
    <selectKey keyProperty="id" order="AFTER" resultType="int">select last_insert_id()</selectKey>
    insert into t_author (name) values (#{name})
  </insert>

  <insert id="insertTranslator">
    <selectKey keyProperty="id" order="AFTER" resultType="int">select last_insert_id()</selectKey>
    insert into t_translator (name) values (#{name})
  </insert>

  <insert id="insertUserRating">
    insert into t_book_user (book_id, user_id, type, score, time) values (#{bookId}, #{userId}, #{type}, #{score}, now())
  </insert>

  <select id="getUserRatingCount" resultType="java.lang.Integer">
    select count(*) from t_book_user where book_id = #{bookId} and user_id = #{userId}
  </select>
</mapper>